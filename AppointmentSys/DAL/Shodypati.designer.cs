#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppointmentSys.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Appointment")]
	public partial class AppointmentSysDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLogTbl(LogTbl instance);
    partial void UpdateLogTbl(LogTbl instance);
    partial void DeleteLogTbl(LogTbl instance);
    partial void InsertDoctorAppointmentTbl(DoctorAppointmentTbl instance);
    partial void UpdateDoctorAppointmentTbl(DoctorAppointmentTbl instance);
    partial void DeleteDoctorAppointmentTbl(DoctorAppointmentTbl instance);
    partial void InsertDoctorTbl(DoctorTbl instance);
    partial void UpdateDoctorTbl(DoctorTbl instance);
    partial void DeleteDoctorTbl(DoctorTbl instance);
    partial void InsertDoctorWorkingAreaTbl(DoctorWorkingAreaTbl instance);
    partial void UpdateDoctorWorkingAreaTbl(DoctorWorkingAreaTbl instance);
    partial void DeleteDoctorWorkingAreaTbl(DoctorWorkingAreaTbl instance);
    partial void InsertAppointmentStatusTbl(AppointmentStatusTbl instance);
    partial void UpdateAppointmentStatusTbl(AppointmentStatusTbl instance);
    partial void DeleteAppointmentStatusTbl(AppointmentStatusTbl instance);
    #endregion
		
		public AppointmentSysDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AppointmentSysDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppointmentSysDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppointmentSysDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppointmentSysDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LogTbl> LogTbls
		{
			get
			{
				return this.GetTable<LogTbl>();
			}
		}
		
		public System.Data.Linq.Table<DoctorAppointmentTbl> DoctorAppointmentTbls
		{
			get
			{
				return this.GetTable<DoctorAppointmentTbl>();
			}
		}
		
		public System.Data.Linq.Table<DoctorTbl> DoctorTbls
		{
			get
			{
				return this.GetTable<DoctorTbl>();
			}
		}
		
		public System.Data.Linq.Table<DoctorWorkingAreaTbl> DoctorWorkingAreaTbls
		{
			get
			{
				return this.GetTable<DoctorWorkingAreaTbl>();
			}
		}
		
		public System.Data.Linq.Table<AppointmentStatusTbl> AppointmentStatusTbls
		{
			get
			{
				return this.GetTable<AppointmentStatusTbl>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogTbl")]
	public partial class LogTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ExceptionMessage;
		
		private string _ExceptionStackTrace;
		
		private string _ControllerName;
		
		private string _IpAddress;
		
		private string _Browser;
		
		private string _OS;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _ActionName;
		
		private System.Nullable<System.DateTime> _CreatedOnUtc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnExceptionMessageChanging(string value);
    partial void OnExceptionMessageChanged();
    partial void OnExceptionStackTraceChanging(string value);
    partial void OnExceptionStackTraceChanged();
    partial void OnControllerNameChanging(string value);
    partial void OnControllerNameChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    partial void OnBrowserChanging(string value);
    partial void OnBrowserChanged();
    partial void OnOSChanging(string value);
    partial void OnOSChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    partial void OnCreatedOnUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnUtcChanged();
    #endregion
		
		public LogTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionMessage", DbType="NVarChar(3050)")]
		public string ExceptionMessage
		{
			get
			{
				return this._ExceptionMessage;
			}
			set
			{
				if ((this._ExceptionMessage != value))
				{
					this.OnExceptionMessageChanging(value);
					this.SendPropertyChanging();
					this._ExceptionMessage = value;
					this.SendPropertyChanged("ExceptionMessage");
					this.OnExceptionMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionStackTrace", DbType="NVarChar(MAX)")]
		public string ExceptionStackTrace
		{
			get
			{
				return this._ExceptionStackTrace;
			}
			set
			{
				if ((this._ExceptionStackTrace != value))
				{
					this.OnExceptionStackTraceChanging(value);
					this.SendPropertyChanging();
					this._ExceptionStackTrace = value;
					this.SendPropertyChanged("ExceptionStackTrace");
					this.OnExceptionStackTraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControllerName", DbType="NVarChar(256)")]
		public string ControllerName
		{
			get
			{
				return this._ControllerName;
			}
			set
			{
				if ((this._ControllerName != value))
				{
					this.OnControllerNameChanging(value);
					this.SendPropertyChanging();
					this._ControllerName = value;
					this.SendPropertyChanged("ControllerName");
					this.OnControllerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddress", DbType="NVarChar(256)")]
		public string IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Browser", DbType="NVarChar(3050)")]
		public string Browser
		{
			get
			{
				return this._Browser;
			}
			set
			{
				if ((this._Browser != value))
				{
					this.OnBrowserChanging(value);
					this.SendPropertyChanging();
					this._Browser = value;
					this.SendPropertyChanged("Browser");
					this.OnBrowserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS", DbType="NVarChar(256)")]
		public string OS
		{
			get
			{
				return this._OS;
			}
			set
			{
				if ((this._OS != value))
				{
					this.OnOSChanging(value);
					this.SendPropertyChanging();
					this._OS = value;
					this.SendPropertyChanged("OS");
					this.OnOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(256)")]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnUtc", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreatedOnUtc
		{
			get
			{
				return this._CreatedOnUtc;
			}
			set
			{
				if ((this._CreatedOnUtc != value))
				{
					this.OnCreatedOnUtcChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnUtc = value;
					this.SendPropertyChanged("CreatedOnUtc");
					this.OnCreatedOnUtcChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorAppointmentTbl")]
	public partial class DoctorAppointmentTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PatientName;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private System.Nullable<int> _AssignDoctorId;
		
		private string _AssignDoctorName;
		
		private System.Nullable<int> _AdvanceAmount;
		
		private System.Nullable<int> _RemainingAmount;
		
		private System.Nullable<long> _StartTime;
		
		private System.Nullable<long> _EndTime;
		
		private string _AppointmentTime;
		
		private System.Nullable<int> _Serial;
		
		private System.Nullable<System.DateTime> _CreatedOnUtc;
		
		private System.Nullable<System.DateTime> _UpdatedOnUtc;
		
		private System.Nullable<bool> _IsPastDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPatientNameChanging(string value);
    partial void OnPatientNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAssignDoctorIdChanging(System.Nullable<int> value);
    partial void OnAssignDoctorIdChanged();
    partial void OnAssignDoctorNameChanging(string value);
    partial void OnAssignDoctorNameChanged();
    partial void OnAdvanceAmountChanging(System.Nullable<int> value);
    partial void OnAdvanceAmountChanged();
    partial void OnRemainingAmountChanging(System.Nullable<int> value);
    partial void OnRemainingAmountChanged();
    partial void OnStartTimeChanging(System.Nullable<long> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<long> value);
    partial void OnEndTimeChanged();
    partial void OnAppointmentTimeChanging(string value);
    partial void OnAppointmentTimeChanged();
    partial void OnSerialChanging(System.Nullable<int> value);
    partial void OnSerialChanged();
    partial void OnCreatedOnUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnUtcChanged();
    partial void OnUpdatedOnUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnUtcChanged();
    partial void OnIsPastDateChanging(System.Nullable<bool> value);
    partial void OnIsPastDateChanged();
    #endregion
		
		public DoctorAppointmentTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientName", DbType="NVarChar(50)")]
		public string PatientName
		{
			get
			{
				return this._PatientName;
			}
			set
			{
				if ((this._PatientName != value))
				{
					this.OnPatientNameChanging(value);
					this.SendPropertyChanging();
					this._PatientName = value;
					this.SendPropertyChanged("PatientName");
					this.OnPatientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignDoctorId", DbType="Int")]
		public System.Nullable<int> AssignDoctorId
		{
			get
			{
				return this._AssignDoctorId;
			}
			set
			{
				if ((this._AssignDoctorId != value))
				{
					this.OnAssignDoctorIdChanging(value);
					this.SendPropertyChanging();
					this._AssignDoctorId = value;
					this.SendPropertyChanged("AssignDoctorId");
					this.OnAssignDoctorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignDoctorName", DbType="NVarChar(50)")]
		public string AssignDoctorName
		{
			get
			{
				return this._AssignDoctorName;
			}
			set
			{
				if ((this._AssignDoctorName != value))
				{
					this.OnAssignDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._AssignDoctorName = value;
					this.SendPropertyChanged("AssignDoctorName");
					this.OnAssignDoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvanceAmount", DbType="Int")]
		public System.Nullable<int> AdvanceAmount
		{
			get
			{
				return this._AdvanceAmount;
			}
			set
			{
				if ((this._AdvanceAmount != value))
				{
					this.OnAdvanceAmountChanging(value);
					this.SendPropertyChanging();
					this._AdvanceAmount = value;
					this.SendPropertyChanged("AdvanceAmount");
					this.OnAdvanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingAmount", DbType="Int")]
		public System.Nullable<int> RemainingAmount
		{
			get
			{
				return this._RemainingAmount;
			}
			set
			{
				if ((this._RemainingAmount != value))
				{
					this.OnRemainingAmountChanging(value);
					this.SendPropertyChanging();
					this._RemainingAmount = value;
					this.SendPropertyChanged("RemainingAmount");
					this.OnRemainingAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="BigInt")]
		public System.Nullable<long> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="BigInt")]
		public System.Nullable<long> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentTime", DbType="NVarChar(50)")]
		public string AppointmentTime
		{
			get
			{
				return this._AppointmentTime;
			}
			set
			{
				if ((this._AppointmentTime != value))
				{
					this.OnAppointmentTimeChanging(value);
					this.SendPropertyChanging();
					this._AppointmentTime = value;
					this.SendPropertyChanged("AppointmentTime");
					this.OnAppointmentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="Int")]
		public System.Nullable<int> Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnUtc", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreatedOnUtc
		{
			get
			{
				return this._CreatedOnUtc;
			}
			set
			{
				if ((this._CreatedOnUtc != value))
				{
					this.OnCreatedOnUtcChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnUtc = value;
					this.SendPropertyChanged("CreatedOnUtc");
					this.OnCreatedOnUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOnUtc", DbType="DateTime2")]
		public System.Nullable<System.DateTime> UpdatedOnUtc
		{
			get
			{
				return this._UpdatedOnUtc;
			}
			set
			{
				if ((this._UpdatedOnUtc != value))
				{
					this.OnUpdatedOnUtcChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOnUtc = value;
					this.SendPropertyChanged("UpdatedOnUtc");
					this.OnUpdatedOnUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPastDate", DbType="Bit")]
		public System.Nullable<bool> IsPastDate
		{
			get
			{
				return this._IsPastDate;
			}
			set
			{
				if ((this._IsPastDate != value))
				{
					this.OnIsPastDateChanging(value);
					this.SendPropertyChanging();
					this._IsPastDate = value;
					this.SendPropertyChanged("IsPastDate");
					this.OnIsPastDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorTbl")]
	public partial class DoctorTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FullName;
		
		private System.Nullable<int> _RegistrationNo;
		
		private string _RegistrationType;
		
		private string _ClinicHospitalName;
		
		private string _Designation;
		
		private System.Nullable<decimal> _YearOfExperience;
		
		private string _WorkingArea;
		
		private string _Addresss;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _CanVisitDays;
		
		private System.TimeSpan _VisitTimeStart;
		
		private System.TimeSpan _VisitTimeEnd;
		
		private int _SlotDuration;
		
		private System.Nullable<int> _VisitFee;
		
		private string _VisitingCard;
		
		private System.Nullable<System.DateTime> _CreatedOnUtc;
		
		private System.Nullable<System.DateTime> _UpdatedOnUtc;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnRegistrationNoChanging(System.Nullable<int> value);
    partial void OnRegistrationNoChanged();
    partial void OnRegistrationTypeChanging(string value);
    partial void OnRegistrationTypeChanged();
    partial void OnClinicHospitalNameChanging(string value);
    partial void OnClinicHospitalNameChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnYearOfExperienceChanging(System.Nullable<decimal> value);
    partial void OnYearOfExperienceChanged();
    partial void OnWorkingAreaChanging(string value);
    partial void OnWorkingAreaChanged();
    partial void OnAddresssChanging(string value);
    partial void OnAddresssChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCanVisitDaysChanging(string value);
    partial void OnCanVisitDaysChanged();
    partial void OnVisitTimeStartChanging(System.TimeSpan value);
    partial void OnVisitTimeStartChanged();
    partial void OnVisitTimeEndChanging(System.TimeSpan value);
    partial void OnVisitTimeEndChanged();
    partial void OnSlotDurationChanging(int value);
    partial void OnSlotDurationChanged();
    partial void OnVisitFeeChanging(System.Nullable<int> value);
    partial void OnVisitFeeChanged();
    partial void OnVisitingCardChanging(string value);
    partial void OnVisitingCardChanged();
    partial void OnCreatedOnUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnUtcChanged();
    partial void OnUpdatedOnUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnUtcChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public DoctorTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNo", DbType="Int")]
		public System.Nullable<int> RegistrationNo
		{
			get
			{
				return this._RegistrationNo;
			}
			set
			{
				if ((this._RegistrationNo != value))
				{
					this.OnRegistrationNoChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNo = value;
					this.SendPropertyChanged("RegistrationNo");
					this.OnRegistrationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationType", DbType="NVarChar(15)")]
		public string RegistrationType
		{
			get
			{
				return this._RegistrationType;
			}
			set
			{
				if ((this._RegistrationType != value))
				{
					this.OnRegistrationTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationType = value;
					this.SendPropertyChanged("RegistrationType");
					this.OnRegistrationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicHospitalName", DbType="NVarChar(150)")]
		public string ClinicHospitalName
		{
			get
			{
				return this._ClinicHospitalName;
			}
			set
			{
				if ((this._ClinicHospitalName != value))
				{
					this.OnClinicHospitalNameChanging(value);
					this.SendPropertyChanging();
					this._ClinicHospitalName = value;
					this.SendPropertyChanged("ClinicHospitalName");
					this.OnClinicHospitalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfExperience", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> YearOfExperience
		{
			get
			{
				return this._YearOfExperience;
			}
			set
			{
				if ((this._YearOfExperience != value))
				{
					this.OnYearOfExperienceChanging(value);
					this.SendPropertyChanging();
					this._YearOfExperience = value;
					this.SendPropertyChanged("YearOfExperience");
					this.OnYearOfExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingArea", DbType="NVarChar(500)")]
		public string WorkingArea
		{
			get
			{
				return this._WorkingArea;
			}
			set
			{
				if ((this._WorkingArea != value))
				{
					this.OnWorkingAreaChanging(value);
					this.SendPropertyChanging();
					this._WorkingArea = value;
					this.SendPropertyChanged("WorkingArea");
					this.OnWorkingAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addresss", DbType="NVarChar(150)")]
		public string Addresss
		{
			get
			{
				return this._Addresss;
			}
			set
			{
				if ((this._Addresss != value))
				{
					this.OnAddresssChanging(value);
					this.SendPropertyChanging();
					this._Addresss = value;
					this.SendPropertyChanged("Addresss");
					this.OnAddresssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanVisitDays", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CanVisitDays
		{
			get
			{
				return this._CanVisitDays;
			}
			set
			{
				if ((this._CanVisitDays != value))
				{
					this.OnCanVisitDaysChanging(value);
					this.SendPropertyChanging();
					this._CanVisitDays = value;
					this.SendPropertyChanged("CanVisitDays");
					this.OnCanVisitDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitTimeStart", DbType="Time NOT NULL")]
		public System.TimeSpan VisitTimeStart
		{
			get
			{
				return this._VisitTimeStart;
			}
			set
			{
				if ((this._VisitTimeStart != value))
				{
					this.OnVisitTimeStartChanging(value);
					this.SendPropertyChanging();
					this._VisitTimeStart = value;
					this.SendPropertyChanged("VisitTimeStart");
					this.OnVisitTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitTimeEnd", DbType="Time NOT NULL")]
		public System.TimeSpan VisitTimeEnd
		{
			get
			{
				return this._VisitTimeEnd;
			}
			set
			{
				if ((this._VisitTimeEnd != value))
				{
					this.OnVisitTimeEndChanging(value);
					this.SendPropertyChanging();
					this._VisitTimeEnd = value;
					this.SendPropertyChanged("VisitTimeEnd");
					this.OnVisitTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlotDuration", DbType="Int NOT NULL")]
		public int SlotDuration
		{
			get
			{
				return this._SlotDuration;
			}
			set
			{
				if ((this._SlotDuration != value))
				{
					this.OnSlotDurationChanging(value);
					this.SendPropertyChanging();
					this._SlotDuration = value;
					this.SendPropertyChanged("SlotDuration");
					this.OnSlotDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitFee", DbType="Int")]
		public System.Nullable<int> VisitFee
		{
			get
			{
				return this._VisitFee;
			}
			set
			{
				if ((this._VisitFee != value))
				{
					this.OnVisitFeeChanging(value);
					this.SendPropertyChanging();
					this._VisitFee = value;
					this.SendPropertyChanged("VisitFee");
					this.OnVisitFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitingCard", DbType="NVarChar(150)")]
		public string VisitingCard
		{
			get
			{
				return this._VisitingCard;
			}
			set
			{
				if ((this._VisitingCard != value))
				{
					this.OnVisitingCardChanging(value);
					this.SendPropertyChanging();
					this._VisitingCard = value;
					this.SendPropertyChanged("VisitingCard");
					this.OnVisitingCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnUtc", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreatedOnUtc
		{
			get
			{
				return this._CreatedOnUtc;
			}
			set
			{
				if ((this._CreatedOnUtc != value))
				{
					this.OnCreatedOnUtcChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnUtc = value;
					this.SendPropertyChanged("CreatedOnUtc");
					this.OnCreatedOnUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOnUtc", DbType="DateTime2")]
		public System.Nullable<System.DateTime> UpdatedOnUtc
		{
			get
			{
				return this._UpdatedOnUtc;
			}
			set
			{
				if ((this._UpdatedOnUtc != value))
				{
					this.OnUpdatedOnUtcChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOnUtc = value;
					this.SendPropertyChanged("UpdatedOnUtc");
					this.OnUpdatedOnUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorWorkingAreaTbl")]
	public partial class DoctorWorkingAreaTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _WorkingArea;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkingAreaChanging(string value);
    partial void OnWorkingAreaChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DoctorWorkingAreaTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingArea", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkingArea
		{
			get
			{
				return this._WorkingArea;
			}
			set
			{
				if ((this._WorkingArea != value))
				{
					this.OnWorkingAreaChanging(value);
					this.SendPropertyChanging();
					this._WorkingArea = value;
					this.SendPropertyChanged("WorkingArea");
					this.OnWorkingAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppointmentStatusTbl")]
	public partial class AppointmentStatusTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<bool> _DefaultStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDefaultStatusChanging(System.Nullable<bool> value);
    partial void OnDefaultStatusChanged();
    #endregion
		
		public AppointmentStatusTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultStatus", DbType="Bit")]
		public System.Nullable<bool> DefaultStatus
		{
			get
			{
				return this._DefaultStatus;
			}
			set
			{
				if ((this._DefaultStatus != value))
				{
					this.OnDefaultStatusChanging(value);
					this.SendPropertyChanging();
					this._DefaultStatus = value;
					this.SendPropertyChanged("DefaultStatus");
					this.OnDefaultStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
